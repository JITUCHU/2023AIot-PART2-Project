<!DOCTYPE html>
<html lang="en">
<head>
  <title>센서값 조회 페이지</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/base.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <link href="car_dashboard.css" rel="stylesheet">
  <link href="simulator.css" rel="stylesheet">
  <link href="info.css" rel="stylesheet">
  <link href="style.css" rel="stylesheet">
  <script src="car_dashboard.js"> </script>
  <script src="//cdn.rawgit.com/Mikhus/canvas-gauges/gh-pages/download/2.1.7/all/gauge.min.js"></script>
  <script nonce="undefined" src="https://cdn.zingchart.com/zingchart.min.js"></script>
  <style>
    body{
      background-color: rgba(209, 209, 209, 0.685);
      font-family: Arial;
    }
    summary{
      width: 200px;
      margin-bottom: 20px;
    }
    .navfix  {
      width: 100%;
      position: fixed;
      top: 0;
  
    }
    
  </style>
</head>
<body>

  <main class="main">

    <nav class="navbar navbar-expand-sm bg-dark navbar-dark navfix">
      <div class="container-fluid">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link active" href="/">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/bright">밝기값 조회</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/front">전면 센서</a>
          </li>
          <li class="nav-item">
            <a class="nav-link " href="/back">후면 센서</a>
          </li>
          <li class="nav-item">
            <a class="nav-link " href="http://localhost:3000/input_days">날짜별 조회</a>
          </li>
          <li class="nav-item">
            <a class="nav-link " href="/logout">로그아웃</a>
          </li>
          <li class="nav=item">
            <a class="nav-link " href="http://localhost:3000/help.html">소개</a>
          </li>
        </ul>
      </div>
    </nav>
    <button class="help-tip" data-bs-toggle="modal" data-bs-target="#myModal">
      <p>도움말을 보려면 클릭하세요.</p>
    </button>
    </section>
    <section class="simulator">
      <div class="road-wrap flex">
  
        <div class="road">
            <div class="lane-wrap">
              <div class="lane">
              <div></div>
              <div></div>
              <div></div>
              <div></div>
              <div></div>
              <div></div>
              <div></div>
              <div></div>
              <div></div>
              <div></div>
              <div></div>
            </div>
        </div> 
      </div>
  </div>
  <div class="simulator-container">
      <div id="headlightLoff" class="headlightLoff"></div>
      <div id="headlightRoff" class="headlightRoff"></div>
      <div id="headlightLon" class="headlightLon"></div>
      <div id="headlightRon" class="headlightRon"></div>
      <img src="./image/headlight.png" alt="headlight" class="headlight" id="headlight">
      <img src="./image/frontYellow.png" alt="frontYellow" class="frontYellow" id="frontYellow">
      <img src="./image/frontOrange.png" alt="frontOrange" class="frontOrange" id="frontOrange">
      <img src="./image/frontRed.png" alt="frontRed" class="frontRed" id="frontRed">
      <img src="./image/backYellow.png" alt="backYellow" class="backYellow" id="backYellow">
      <img src="./image/backOrange.png" alt="backOrange" class="backOrange" id="backOrange">
      <img src="./image/backRed.png" alt="backRed" class="backRed" id="backRed">
      <img src="./image/pngwing.com.png" alt="pngwing" class="img">
      <div class="chart-container">
      <canvas data-type="radial-gauge" id="myChart" class="myChart"
      data-width="150"
      data-height="150"
      data-units="CM"
      data-title="Front"
      data-min-value="0"
      data-max-value="10"
      data-major-ticks="[0,1,2,3,4,5,6,7,8,9,10]"
      data-minor-ticks="2"
      data-stroke-ticks="true"
      data-highlights='[
                  {"from": 0, "to": 5, "color": "rgba(0,0, 255, .3)"},
                  {"from": 5, "to": 10, "color": "rgba(255, 0, 0, .3)"}
              ]'
      data-ticks-angle="225"
      data-start-angle="67.5"
      data-color-major-ticks="#ddd"
      data-color-minor-ticks="#ddd"
      data-color-title="#eee"
      data-color-units="#ccc"
      data-color-numbers="#eee"
      data-color-plate="#222"
      data-border-shadow-width="0"
      data-borders="true"
      data-needle-type="arrow"
      data-needle-width="2"
      data-needle-circle-size="7"
      data-needle-circle-outer="true"
      data-needle-circle-inner="false"
      data-animation-duration="1500"
      data-animation-rule="linear"
      data-color-border-outer="#333"
      data-color-border-outer-end="#111"
      data-color-border-middle="#222"
      data-color-border-middle-end="#111"
      data-color-border-inner="#111"
      data-color-border-inner-end="#333"
      data-color-needle-shadow-down="#333"
      data-color-needle-circle-outer="#333"
      data-color-needle-circle-outer-end="#111"
      data-color-needle-circle-inner="#111"
      data-color-needle-circle-inner-end="#222"
      data-value-box-border-radius="0"
      data-color-value-box-rect="#222"
      data-color-value-box-rect-end="#333"
      data-font-value="Led"
      data-font-numbers="Led"
      data-font-title="Led"
      data-font-units="Led"
  ></canvas>
</div>
      <canvas data-type="radial-gauge" id="myChart1" class="myChart1"
      data-width="150"
      data-height="150"
      data-units="Br"
      data-title="Bri"
      data-min-value="0"
      data-max-value="100"
      data-major-ticks="[0,10,20,30,40,50,60,70,80,90,100]"
      data-minor-ticks="2"
      data-stroke-ticks="true"
      data-highlights='[
                  {"from": 0, "to": 50, "color": "rgba(0,0, 255, .3)"},
                  {"from": 50, "to": 100, "color": "rgba(255, 0, 0, .3)"}
              ]'
      data-ticks-angle="225"
      data-start-angle="67.5"
      data-color-major-ticks="#ddd"
      data-color-minor-ticks="#ddd"
      data-color-title="#eee"
      data-color-units="#ccc"
      data-color-numbers="#eee"
      data-color-plate="#222"
      data-border-shadow-width="0"
      data-borders="true"
      data-needle-type="arrow"
      data-needle-width="2"
      data-needle-circle-size="7"
      data-needle-circle-outer="true"
      data-needle-circle-inner="false"
      data-animation-duration="1500"
      data-animation-rule="linear"
      data-color-border-outer="#333"
      data-color-border-outer-end="#111"
      data-color-border-middle="#222"
      data-color-border-middle-end="#111"
      data-color-border-inner="#111"
      data-color-border-inner-end="#333"
      data-color-needle-shadow-down="#333"
      data-color-needle-circle-outer="#333"
      data-color-needle-circle-outer-end="#111"
      data-color-needle-circle-inner="#111"
      data-color-needle-circle-inner-end="#222"
      data-value-box-border-radius="0"
      data-color-value-box-rect="#222"
      data-color-value-box-rect-end="#333"
      data-font-value="Led"
      data-font-numbers="Led"
      data-font-title="Led"
      data-font-units="Led"
  ></canvas>
  <canvas data-type="radial-gauge" id="myChart2" class="myChart2"
      data-width="150"
      data-height="150"
      data-units="CM"
      data-title="Back"
      data-min-value="0"
      data-max-value="10"
      data-major-ticks="[0,1,2,3,4,5,6,7,8,9,10]"
      data-minor-ticks="2"
      data-stroke-ticks="true"
      data-highlights='[
                  {"from": 0, "to": 5, "color": "rgba(0,0, 255, .3)"},
                  {"from": 5, "to": 10, "color": "rgba(255, 0, 0, .3)"}
              ]'
      data-ticks-angle="225"
      data-start-angle="67.5"
      data-color-major-ticks="#ddd"
      data-color-minor-ticks="#ddd"
      data-color-title="#eee"
      data-color-units="#ccc"
      data-color-numbers="#eee"
      data-color-plate="#222"
      data-border-shadow-width="0"
      data-borders="true"
      data-needle-type="arrow"
      data-needle-width="2"
      data-needle-circle-size="7"
      data-needle-circle-outer="true"
      data-needle-circle-inner="false"
      data-animation-duration="1500"
      data-animation-rule="linear"
      data-color-border-outer="#333"
      data-color-border-outer-end="#111"
      data-color-border-middle="#222"
      data-color-border-middle-end="#111"
      data-color-border-inner="#111"
      data-color-border-inner-end="#333"
      data-color-needle-shadow-down="#333"
      data-color-needle-circle-outer="#333"
      data-color-needle-circle-outer-end="#111"
      data-color-needle-circle-inner="#111"
      data-color-needle-circle-inner-end="#222"
      data-value-box-border-radius="0"
      data-color-value-box-rect="#222"
      data-color-value-box-rect-end="#333"
      data-font-value="Led"
      data-font-numbers="Led"
      data-font-title="Led"
      data-font-units="Led"
  ></canvas>
  <div class="clock">
    <img src="./image/clock.png" id="clockimg" class="clockimg">
    <div class="hour">
        <div id="hr" class="hr"></div>
    </div>
    <div class="min">
        <div id="mn" class="mn"></div>
    </div>
    <div class="sec">
        <div id="sc" class="sc"></div>
    </div>
    <script src="./clock.js" type="module"></script>
  </div>
      </section>
    </main>
  </div>
  </div>
    <!-- The Modal -->
    <div class="modal" id="myModal">
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
  
          <!-- Modal Header -->
          <div class="modal-header">
            <h4 class="modal-title">쉽게 보는 스마트 차량 전장 시스템</h4>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
  
          <!-- Modal body -->
          <div class="modal-body">
            <div id="demo" class="carousel slide" data-bs-ride="carousel">
  
              <!-- Indicators/dots -->
              <div class="carousel-indicators">
                <button type="button" data-bs-target="#demo" data-bs-slide-to="0" class="active"></button>
                <button type="button" data-bs-target="#demo" data-bs-slide-to="1"></button>
              </div>
              
              <!-- The slideshow/carousel -->
              <div class="carousel-inner">
                <div class="carousel-item active">
                  <img src="image/대시보드설명.png" alt="대시보드설명" class="d-block" style="width: 100%; height: 100%;">
                </div>
                <div class="carousel-item">
                  <img src="image/상단바설명.png" alt="상단바설명" class="d-block" style="width: 100%; height: 100%;">
                </div>
              </div>
              
              <!-- Left and right controls/icons -->
              <button class="carousel-control-prev" type="button" data-bs-target="#demo" data-bs-slide="prev">
                <span class="carousel-control-prev-icon"></span>
              </button>
              <button class="carousel-control-next" type="button" data-bs-target="#demo" data-bs-slide="next">
                <span class="carousel-control-next-icon"></span>
              </button>
            </div>
          </div>
  
          <!-- Modal footer -->
          <div class="modal-footer">
            <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
          </div>
  
        </div>
      </div>
  </div>
</div>

<script>
  function dataRefresh() {
    const req = new XMLHttpRequest()
    req.open("GET", "http://localhost:3000/get-all-data")

    req.addEventListener("load", function(){
      const data = JSON.parse(req.response)

      const now = new Date()
      const today = `${now.getFullYear()}-${now.getMonth() + 1}-0${now.getDate()}`

      console.log(data[today])
      const BackDistance = data[today].BackDistance[Object.keys(data[today].BackDistance)[Object.keys(data[today].BackDistance).length - 1]]
      console.log(BackDistance)  

      const BriValue = data[today].BriValue[Object.keys(data[today].BriValue)[Object.keys(data[today].BriValue).length - 1]]
      console.log(BriValue)

      const FrontDistance = data[today].FrontDistance[Object.keys(data[today].FrontDistance)[Object.keys(data[today].FrontDistance).length - 1]]
      console.log(FrontDistance)
      
    function headlightON(){
      const HeadL = document.getElementById("headlightLon");
      const HeadR = document.getElementById("headlightRon");
      const HeadlightResult = parseFloat(BriValue.briValue);
      console.log(BriValue, HeadlightResult)
      if (HeadlightResult <= 50){
        HeadL.style.opacity = "1"
      }
      else{
        HeadL.style.opacity = "0"
      }
      if (HeadlightResult <= 50){
        HeadR.style.opacity = "1"
      }
      else{
        HeadR.style.opacity = "0"
      }
    }

    function headlightOFF(){
      const HeadL = document.getElementById("headlightLoff");
      const HeadR = document.getElementById("headlightRoff");
      const HeadlightResult = parseFloat(BriValue.briValue);
      console.log(BriValue, HeadlightResult)
      if (HeadlightResult >= 50){
        HeadL.style.opacity = "1"
      }
      else{
        HeadL.style.opacity = "0"
      }
      if (HeadlightResult >= 50){
        HeadR.style.opacity = "1"
      }
      else{
        HeadR.style.opacity = "0"
      }
    }

    function imageOpacityHead(){
      const HeadLight = document.getElementById("headlight");
      const HeadlightResult = parseFloat(BriValue.briValue);
      if (HeadlightResult <= 50){
        HeadLight.style.opacity = "1"
      }
      else {
        HeadLight.style.opacity = "0"
      }
    }
    function imageOpacityFrt(){
      const FrtYellow = document.getElementById("frontYellow");
      const FrtOrange = document.getElementById("frontOrange");
      const FrtRed = document.getElementById("frontRed");
      const frontResult = parseFloat(FrontDistance.frontDistance);
      console.log(frontResult)
      if (frontResult <= 10){
        FrtYellow.style.opacity = "1"
      }
      else {
        FrtYellow.style.opacity = "0"
      }
      if (frontResult <= 5){
        FrtOrange.style.opacity = "1"
      }
      else {
        FrtOrange.style.opacity = "0"
      }
      if (frontResult <= 3) {
        FrtRed.style.opacity = "1"
      }
      else {
        FrtRed.style.opacity = "0"
      }
    }
    function imageOpacityBack(){
      const BakYellow = document.getElementById("backYellow");
      const BakOrange = document.getElementById("backOrange");
      const BakRed = document.getElementById("backRed");
      const BackResult = parseFloat(BackDistance.backDistance);
      
      if (BackResult <= 10){
        BakYellow.style.opacity = "1"
      }
      else{
        BakYellow.style.opacity = "0"
      }
      if (BackResult <= 5){
        BakOrange.style.opacity = "1"
      }
      else {
        BakOrange.style.opacity = "0"
      }
      if (BackResult <= 3){
        BakRed.style.opacity = "1"
      }
      else {
        BakRed.style.opacity = "0"
      }
    }
   
    var timers = [];
    
    function animateGauges() {
        const Back = document.gauges[2]

        timers.push(setInterval(function() {
              Back.value = parseFloat(BackDistance.backDistance) 
        }, Back.animation.duration + 50));
    }

    function animateGauges1(){
      const Bri = document.gauges[1]

      timers.push(setInterval(function(){
          Bri.value = parseFloat(BriValue.briValue) 
      },Bri.animation.duration + 50));
    }

    function animateGauges2(){
      const Front = document.gauges[0]
      timers.push(setInterval(function(){
        Front.value = parseFloat(FrontDistance.frontDistance)
      },Front.animation.duration + 50));
    }
    
    function stopGaugesAnimation() {
        timers.forEach(function(timer) {
            clearInterval(timer);
        });
    }
    
    animateGauges();
    animateGauges1();
    animateGauges2();
    imageOpacityFrt();
    imageOpacityHead();
    imageOpacityBack();
    headlightON();
    headlightOFF(); 
    setTimeout(dataRefresh, 1000);
    });
    req.send()
    }
    dataRefresh();
  </script>
  </body>
  </html>
  
